package ${package.Entity};

#if(${swagger2})
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#end
#if(${entityLombokModel})
import lombok.Data;
import lombok.EqualsAndHashCode;
#if(${chainModel})
import lombok.experimental.Accessors;
#end
#end
 ${superServiceClassPackage};
 ${superControllerClassPackage};
 ${superMapperClassPackage};
 ${supperClassPackage};
 ${superEntityClassPackage};


/**
 * $!{table.comment}
 * @author ${author}
 * @since ${date}
 */
#if(${swagger2})
@ApiModel(value = "${entity}对象", description = "$!{table.comment}")
#end
#if(${entityLombokModel})
@Data
#if(${superEntityClass})
@EqualsAndHashCode(callSuper = true)
#else
@EqualsAndHashCode(callSuper = false)
#end
#if(${chainModel})
@Accessors(chain = true)
#end
#end
#if(${table.convert})
@TableName("${table.name}")
#end
#if(${superEntityClass})
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end {
#elseif(${activeRecord})
public class ${entity} extends Model<${entity}> {
#else
public class ${entity} implements Serializable{
#end

#if(${entitySerialVersionUID})
    private static final long serialVersionUID=1L;
#end

## ----------  开始遍历数据库字段  ----------
#foreach($field in ${table.fields})
#if(${field.propertyName} != "id" && ${field.propertyName} != "deleted" && ${field.propertyName} != "version"
&& ${field.propertyName} != "createrId" && ${field.propertyName} != "createTime"
&& ${field.propertyName} !="updaterId" && ${field.propertyName} != "updateTime"
&& ${field.propertyName} != "status" && ${field.propertyName} != "fileUuid")
#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
## 注释
#if("$!field.comment" != "")
#if(${swagger2})
    @ApiModelProperty(value = "${field.comment}")
#else
/**
* ${field.comment}
*/
#end
#end
#if(${field.keyFlag})
## 主键注解
#if(${field.keyIdentityFlag})
@TableId(value = "${field.annotationColumnName}", type = IdType.AUTO)
#elseif(!$null.isNull(${idType}) && "$!idType" != "")
@TableId(value = "${field.annotationColumnName}", type = IdType.${idType})
#elseif(${field.convert})
@TableId("${field.annotationColumnName}")
#end
## 普通字段注解
#elseif(${field.fill})
## 字段填充
#if(${field.convert})
@TableField(value = "${field.annotationColumnName}", fill = FieldFill.${field.fill})
#else
@TableField(fill = FieldFill.${field.fill})
#end
#elseif(${field.convert})
@TableField("${field.annotationColumnName}")
#end
## 逻辑删除注解
#if(${logicDeleteFieldName}==${field.name})
@TableLogic
#end
## 版本号乐观锁注解
#if(${versionFieldName}==${field.name})
@Version
#end
    private ${field.propertyType} ${field.propertyName};

#end
#end

## ----------  结束遍历数据库字段  ----------
#if(!${entityLombokModel})
#foreach($field in ${table.fields})
#if(${field.propertyType.equals("boolean")})
#set($getprefix="is")
#else
#set($getprefix="get")
#end
    public ${field.propertyType} ${getprefix}${field.capitalName}(){
        return ${field.propertyName};
    }
#if(${chainModel})
    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}){
#else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#end
        this.${field.propertyName} = ${field.propertyName};
#if(${chainModel})
        return this;
#end
    }
#end
    @Override
    public String toString() {
            return "${entity}{" +
        #foreach($field in ${table.fields})
            #if($!{foreach.index}==0)
                    "${field.propertyName}=" + ${field.propertyName} +
            #else
                    ", ${field.propertyName}=" + ${field.propertyName} +
            #end
        #end
            "}";
    }
#end
#if(${entityColumnConstant})
#foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} ="${field.name}";
#end
#end
#if(${activeRecord})
    @Override
    protected Serializable pkVal(){
    #if(${keyPropertyName})
        return this.${keyPropertyName};
    #else
        return null;
    #end
    }
#end
}
